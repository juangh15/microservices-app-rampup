version: 2.1
jobs:
  build-and-test-users-api:
    docker:
      - image: cimg/openjdk:8.0.345
    steps:
      - checkout
      - run:
          name: Build Users API
          command: mvn -B -DskipTests -f ./users-api clean package
      - run:
          name: Test Users API
          command: mvn -f ./users-api test
  build-and-test-auth-api:
    docker:
      - image: cimg/go:1.17
    steps:
      - checkout
      - run:
          name: Init Auth API
          command: cd ./auth-api && go mod init github.com/bortizf/microservice-app-example/tree/master/auth-api
      - run:
          name: Tidy Auth API
          command: cd ./auth-api && go mod tidy 
      - run:
          name: Build Auth API
          command: cd ./auth-api && go build
      - run:
          name: Test Auth API
          command: cd ./auth-api && go test
  build-and-test-frontend:
    docker:
      - image: cimg/node:8.17.0
    steps:
      - checkout
      - run:
          name: Install the required Packages
          command: cd ./frontend && npm install
      - run:
          name: Build the frontend artifacts
          command: cd ./frontend && npm run build
  gather-and-store-artifacts:
    docker:
      - image: cimg/base:edge-20.04
    steps:
      - checkout
      - run:
          name: Get Log Message Processor Script
          command: mkdir -p artifacts/log-message-processor/ && mv /home/circleci/project/log-message-processor/main.py ./artifacts/log-message-processor/main.py
      - run:
          name: Get ToDos API Artifact
          command: mkdir -p artifacts/todos-api && mv /home/circleci/project/todos-api ./artifacts/todos-api
      - run: 
          name: Compress Artifacts
          command: touch ./log-message-and-todos-artifact.tar.gz && tar -czvf ./log-message-and-todos-artifact.tar.gz ./artifacts
  trigger-cd-pipeline:
      docker: 
        - image: cimg/base:edge-20.04
      resource_class: small
      steps:
        - run:
            name: Send request to CD Pipeline
            command: |
              curl --request POST \
                --url 'https://circleci.com/api/v2/project/gh/juangh15/deploy-microservices-app/pipeline' \
                --header "Circle-Token: $CIRCLE_CD_USER_TOKEN" \
                --header "content-type: application/json" \
                --data '{"branch":"circleci-project-setup"}'
workflows:
  CI-Process: 
    jobs:
      - build-and-test-users-api
      - build-and-test-auth-api
      - build-and-test-frontend
      - gather-and-store-artifacts
      - trigger-cd-pipeline: 
          requires:
            - build-and-test-users-api
            - build-and-test-auth-api
            - build-and-test-frontend
            - gather-and-store-artifacts